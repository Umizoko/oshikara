# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Building and Testing Java with Gradle CI

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  gradle:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: oshikara
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: rootpassword
          options: >-
            --health-cmd="mysqladmin ping -h localhost"
            --health-interval 20s
            --health-timeout 10s
            --health-retries 10
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v2
      - name: Setup JVM
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 16
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Executable Gradlew file
        run: chmod +x ./gradlew
      - name: Run build with Gradle wrapper
        id: gradle
        run: ./gradlew build --scan  --stacktrace
      - name: "Add build scan URL as PR comment"
        uses: actions/github-script@v5
        if: github.event_name == 'pull_request' && failure()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå ${{ github.workflow }} failed: ${{ steps.gradle.outputs.build-scan-url }}'
            })